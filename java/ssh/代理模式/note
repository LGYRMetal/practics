1. 为什么使用代理？
为了在不修改目标对象的基础上，增强主业务逻辑。
客户类真正想要访问的对象是目标对象，但客户类真正可以访问的对象是代理对象。
客户类对目标对象的访问是通过访问代理对象来实现的。当然，代理类与目标类要
实现同一个接口。

2. 代理模式的分类：
1）静态代理：在程序运行之前，代理类与目标类的关系就已经确立了,在代码中一般
             有代理类的就是静态代理。
2）动态代理：在程序运行时，才会确立代理类与目标类之间的关系，在代码中一般
             只有代理对象，而没有代理类的（代理对象一般通过代理工具或代理
             工厂生成的），这种代理被称为动态代理。

3.动态代理：
1）jdk的Proxy动态代理,要求目标类与代理类实现相同的接口。若目标类不存在接口，
则无法使用该方式实现。
2) CGLIB动态代理,对于无接口的类，要为其创建动态代理，就要使用CGLIB来实现。
CGLIB代理的生成原理是生产目标类的子类，而子类是增强过的，这个子类对象就是
代理对象。所以，使用CGLIB生成动态代理，要求目标类必须能够被继承，即不能是
final的类。
